install.packages("rmarkdown")
tls <- readLAS("Merge_Crane.las")
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("gdal-config")
install.packages("devtools")
install_github("akamoske/canopyLazR")
library(devtools)
install.packages("devtools")
install.packages("Rcpp", dependencies = TRUE)
install.packages("devtools")
install.packages("devtools")
install.packages("pkgdown")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install_github("akamoske/canopyLazR")
library(devtools)
install_github("akamoske/canopyLazR")
install.packages("raster")
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("gdal-config")
install.packages( pkgs = "rgdal"
, lib = "./R_Packages"
, method = "curl"
, configure.args = c(
"--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config"
, "--with-proj-include=/p/home/bin/proj4/include"
, "--with-proj-lib=/p/home/bin/proj4/lib"
)
)
install.packages("rgdal")
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("lidR")
install.packages("stars")
install.packages("lidR")
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("terra", repos = "https://rspatial.r-universe.dev")
install.packages("rayshader")
library(canopyLazR)
install_github("akamoske/canopyLazR")
# Packages
install.packages("devtools")
# you need devtools to run install_github
library(devtools)
install_github("akamoske/canopyLazR")
install.packages("lidR")
install.packages("terra", repos='https://rspatial.r-universe.dev')
install.packages("rayshader")
setwd("/home/denis/workspace/uni/ground_truthing/submission_4/code")
### colorbar
col <- height.colors(25)
library(devtools)
library(canopyLazR)
library(rLiDAR)
library(forestr)
library(lidR)
library(rayshader)
library(RCSF)
library(rayshader)
library(rgdal)
install("rgdal")
install.packages("rgdal")
setwd("/home/denis/workspace/uni/ground_truthing/submission_4/code")
### colorbar
col <- height.colors(25)
### setting an extent to tls raster
aoi <- shapefile("shapefile/polygon.shp")
aoi
### TLS canopy height model
chm_IEP_new <- raster('chm_IEP.tif')
chm_IEP <- crop(chm_IEP_new, aoi)
plot(chm_IEP_new)
plot(chm_IEP)
h_tls_sd_new = aggregate(chm_IEP, fact = 10, fun = "sd")
plot(h_tls_sd_new)
hist(h_tls_sd_new)
h_s2_top <- raster("ETH_GlobalCanopyHeight_DE_CHM_clip.tif")
plot(h_s2_top)
h_s2_top
h_s2_sd <- raster("ETH_GlobalCanopyHeight_DE_STD_clip.tif")
plot(h_s2_sd)
h_tls_top <- projectRaster(chm_IEP, h_s2_top, alignOnly = F)
plot(h_tls_top)
h_tls_sd <- projectRaster(h_tls_sd_new, h_s2_top, alignOnly = F)
plot(h_tls_sd)
h_tls_top_res <- resample(h_tls_top, h_s2_top, method = "bilinear")
h_tls_sd_res <- resample(h_tls_sd, h_s2_top, method = "bilinear")
h_s2_top <- crop(h_s2_top, aoi)
h_s2_sd <- crop(h_s2_sd, aoi)
plot(h_s2_top)
hist(h_s2_top)
plot(h_s2_sd)
hist(h_s2_sd)
custom_palette <- c("#ad8f68", "#ffcc00", "#85dd4b", "darkgreen")
colnames(df_h_tls_top) <- c("x", "y", "value")
custom_palette <- c("#ad8f68", "#ffcc00", "#85dd4b", "darkgreen")
col <- c("blue", "#3bbce7", "#a931f3", "red")
df_h_tls_top <- as.data.frame(chm_IEP, xy = TRUE)
colnames(df_h_tls_top) <- c("x", "y", "value")
df_h_tls_sd <- as.data.frame(h_tls_sd_new, xy = TRUE)
colnames(df_h_tls_sd) <- c("x", "y", "value")
